from glob import glob

auto_libs = ''

# Detect the system's endianness
from sys import byteorder
if byteorder == 'big':
	endian = '_NXT_BIG_ENDIAN'
else:
	endian = '_NXT_LITTLE_ENDIAN'

BuildEnv = Environment(CCFLAGS=['-g','-Wno-write-strings','-ggdb'
                                ,'-D' + endian])

if auto_libs:
	BuildEnv.ParseConfig('pkg-config --cflags --libs ' + auto_libs)

Default(BuildEnv.Library('lestat',
			 [x for x in glob('lestat/*.cpp')
			  if not x.startswith('main')],
			 LIBS=['usb','bluetooth']))

Default(BuildEnv.Library('robot_control',
			 [x for x in glob('robot_control/*.cpp')
			  if not x.startswith('main')],
			 LIBS=['usb','bluetooth','lestat']))

Default(BuildEnv.Library('screen_control',
			 [x for x in glob('screen/*.cpp')
			  if not x.startswith('main')],
			 LIBS=['usb','bluetooth','lestat','pthread']))


Default(BuildEnv.Program('test','main.cpp',
			 LIBS=['usb','bluetooth','robot_control'
			 ,'screen_control','lestat','ncurses','pthread'],
			 LIBPATH='.'))
